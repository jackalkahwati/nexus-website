name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

defaults:
  run:
    working-directory: ./

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Type Check
      run: npm run type-check
    
    - name: Test
      run: npm test -- --coverage
      env:
        CI: true
        NODE_ENV: test
    
    - name: Upload coverage to Codecov
      if: success() && github.event_name != 'pull_request' && github.repository_owner == 'nexus-org'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        fail_ci_if_error: false
        verbose: true

  build:
    name: Build
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: |
          .next
          public
          package.json
          package-lock.json
          next.config.js

  deploy:
    name: Deploy
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: build
    
    - name: Deploy to Vercel
      if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging') && github.repository_owner == 'nexus-org'
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    - name: Post Slack Notification
      if: always() && github.repository_owner == 'nexus-org' && github.ref != 'refs/heads/main'
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_COLOR: ${{ job.status == 'success' && '#36a64f' || '#ff0000' }}
        SLACK_TITLE: "Deploy ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }} Status"
        SLACK_MESSAGE: "Deploy ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }} ${{ job.status == 'success' && 'succeeded' || 'failed' }} for ${{ github.repository }}@${{ github.sha }}"
        SLACK_USERNAME: GitHub Actions
        SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
